/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

*,
*::after,
*::before {
    margin: 0;
    padding: 0;
    box-sizing: inherit;
}

html {
    font-size: 62.5%; /* 10px; */
}

body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    color: #777;
    /* font-size: 16px; */
    line-height: 1.7;
    padding: 30px;
}

.header {
    height: 95vh;
    background-image: linear-gradient(
        to right bottom
        , rgba(126, 213, 111, 0.8)
        , rgba(40, 180, 133, 0.8))
    , url(../img/hero.jpg);
    background-size: cover;
    background-position: top;
    position: relative;

    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); 
    /* https://bennettfeely.com/clippy/ */
    /* TODO: diff between setting it as 75vh vs 70% */
    
    box-sizing: border-box; /* borders and paddings are no longer added to total width/height taht we specify for a box */
}

.logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem;    
}
.logo {
    height: 3.5rem;
}

.text-box {
    position: absolute;    
    top: 40%; /* where starting point is; percentage of the width of the parent */
    left: 50%; /* where starting point is; percentage of the width of the parent */
    transform: translate(-50%, -50%); /* percentage of the width of the element itself */
    text-align: center;
}
.heading-primary {
    color: #fff;
    text-transform: uppercase;

    /* Determines whether or not the 'back' side of a transformed element is visible when facing the viewer. With an identity transform, the front side of an element faces the viewer. */
    backface-visibility: hidden; 
    margin-bottom: 6rem;
}
/* block elements take the entire width and create line breaks before and after them */
/* span elements inline by default */
.heading-primary-main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;

    /* animation NAME & DURATION required */
    animation-name: moveInLeft;
    animation-duration: 1s;    
    animation-timing-function: ease-out; 
    /* https://developer.mozilla.org/en-US/docs/Web/CSS/animation-timing-function */
    /*
    animation-iteration-count: 3;
    animation-delay: 3s;
    */
}
.heading-primary-sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    animation: moveInRight 1s ease-out;
}

@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-10rem);
    }
    80% {
        transform: translateX(1rem);
    }
    100% {
        opacity: 1;
        transform: translate(0);
    }
}
@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(10rem);
    }
    80% {
        transform: translateX(-1rem);
    }
    100% {
        opacity: 1;
        transform: translate(0);
    }
}
@keyframes moveInBottom {
    0% {
        opacity: 0;
        transform: translateY(3rem);
    }
    100% {
        opacity: 1;
        transform: translate(0);
    }
}

/* pseudo class = special state of a class */
.btn:link,
.btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block; /* box model works on this element as if it is normal block; to specify paddings/height/width to element */
    border-radius: 10rem;
    transition: all .2s; /* animation needs to be assigned to the default state; not pseudo state */

    position: relative;
}
.btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 1rem 2rem rgba(0,0,0, 0.2);
}
.btn:active {
    transform: translateY(-1px);
    box-shadow: 0 .5rem 1rem rgba(0,0,0, 0.2);
}
.btn-white {
    background-color: #fff;
    color: #777;
}

.btn::after {
    content: ""; /* MUST */
    display: inline-block; /* set it the same as the original element */
    height: 100%; /* relative to the orig element */
    width: 100%; /* relative to the orig element */
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s;
}
.btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
}
.btn-white::after {
    background-color: #fff;
}
.btn-animated {
    /* animation -name -duration -timing-function -delay */
    animation: moveInBottom .5s ease-out .75s;
    animation-fill-mode: backwards; /* Defines what values are applied by the animation outside the time it is executing. */
}